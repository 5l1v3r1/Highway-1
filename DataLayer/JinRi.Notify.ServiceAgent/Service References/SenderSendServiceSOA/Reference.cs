//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace JinRi.Notify.ServiceAgent.SenderSendServiceSOA {
    using System;
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessagePriorityEnum", Namespace="http://schemas.datacontract.org/2004/07/JinRi.Notify.Model")]
    public enum MessagePriorityEnum : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Middle = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Low = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/JinRi.Notify.Model")]
    public enum MessageTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderPayResult = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderTicketOut = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FlightDelay = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FlightCancel = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyZBNTicketOut = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyZBNReturn = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderZBNRefund = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderApplyReturn = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderApplyRefund = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderReturnResult = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRefundResult = 1024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderCancel = 2048,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="PushResultEnum", Namespace="http://schemas.datacontract.org/2004/07/JinRi.Notify.Model")]
    public enum PushResultEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Abort = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pushing = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SenderSendServiceSOA.ISendService")]
    public interface ISendService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/Receive", ReplyAction="http://tempuri.org/ISendService/ReceiveResponse")]
        JinRi.Notify.DTO.PushMessageResult Receive(JinRi.Notify.DTO.PushMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/Receive", ReplyAction="http://tempuri.org/ISendService/ReceiveResponse")]
        System.Threading.Tasks.Task<JinRi.Notify.DTO.PushMessageResult> ReceiveAsync(JinRi.Notify.DTO.PushMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/ReceiveList", ReplyAction="http://tempuri.org/ISendService/ReceiveListResponse")]
        JinRi.Notify.DTO.PushMessageResult ReceiveList(JinRi.Notify.DTO.PushMessage[] array);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/ReceiveList", ReplyAction="http://tempuri.org/ISendService/ReceiveListResponse")]
        System.Threading.Tasks.Task<JinRi.Notify.DTO.PushMessageResult> ReceiveListAsync(JinRi.Notify.DTO.PushMessage[] array);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/Callback", ReplyAction="http://tempuri.org/ISendService/CallbackResponse")]
        JinRi.Notify.DTO.PushCallbackResult Callback(JinRi.Notify.DTO.PushMessageResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/Callback", ReplyAction="http://tempuri.org/ISendService/CallbackResponse")]
        System.Threading.Tasks.Task<JinRi.Notify.DTO.PushCallbackResult> CallbackAsync(JinRi.Notify.DTO.PushMessageResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISendServiceChannel : JinRi.Notify.ServiceAgent.SenderSendServiceSOA.ISendService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendServiceClient : System.ServiceModel.ClientBase<JinRi.Notify.ServiceAgent.SenderSendServiceSOA.ISendService>, JinRi.Notify.ServiceAgent.SenderSendServiceSOA.ISendService {
        
        public SendServiceClient() {
        }
        
        public SendServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SendServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SendServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SendServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JinRi.Notify.DTO.PushMessageResult Receive(JinRi.Notify.DTO.PushMessage message) {
            return base.Channel.Receive(message);
        }
        
        public System.Threading.Tasks.Task<JinRi.Notify.DTO.PushMessageResult> ReceiveAsync(JinRi.Notify.DTO.PushMessage message) {
            return base.Channel.ReceiveAsync(message);
        }
        
        public JinRi.Notify.DTO.PushMessageResult ReceiveList(JinRi.Notify.DTO.PushMessage[] array) {
            return base.Channel.ReceiveList(array);
        }
        
        public System.Threading.Tasks.Task<JinRi.Notify.DTO.PushMessageResult> ReceiveListAsync(JinRi.Notify.DTO.PushMessage[] array) {
            return base.Channel.ReceiveListAsync(array);
        }
        
        public JinRi.Notify.DTO.PushCallbackResult Callback(JinRi.Notify.DTO.PushMessageResult result) {
            return base.Channel.Callback(result);
        }
        
        public System.Threading.Tasks.Task<JinRi.Notify.DTO.PushCallbackResult> CallbackAsync(JinRi.Notify.DTO.PushMessageResult result) {
            return base.Channel.CallbackAsync(result);
        }
    }
}
