<?xml version="1.0" encoding="utf-8" ?>
<appSettings>
  <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  <!--今日应用编号-->
  <add key="AppId" value="100403"/>
  <!--机器编号-->
  <add key="MachineId" value="10000"/>
  <!--Metrics 服务端地址-->
  <add key="Metrics.ServiceReportUrl" value="http://192.168.2.23:10001/Metrics.asmx" />
  <!--日志目录-->
  <add key="log4net.Config" value="Configs/log4net.config"/>
  <!-- 是否开启远程日志 -->
  <add key="EnableRemotingLog" value="1"/>
  <!--RabbitMQ配置-->
  <add key="RabbitMQHost" value="host=192.168.2.196:5672;virtualHost=default;username=dev_jinri01;password=jinri01@20190"/>
  <!--服务配置-->
  <add key="LogSetting" value="{LogLevel:'Debug'}"/>
  <add key="ReceiveServiceSetting" value="{IsDirectRouteHighToBuilderService:false, IsDirectRouteMiddleToBuilderService:false, IsDirectRouteNormalToBuilderService:false, IsDirectRouteLowToBuilderService:false, IsOpenBatchReceiveHighMessage:false, AutoFlushReceiveHighMessage: 1, IsOpenBatchReceiveMiddleMessage: true, AutoFlushReceiveMiddleMessage: 3, IsOpenBatchReceiveNormalMessage: true, AutoFlushReceiveNormalMessage: 5, IsOpenBatchReceiveLowMessage: true, AutoFlushReceiveLowMessage: 7}"/>
  <add key="BuilderServiceSetting" value="{IsOpenBatchSaveNotifyMessage:true, AutoFlushNotifyMessage:5, IsOpenBatchSavePushMessage:false, AutoFlushPushMessage:1, IsOpenBatchSendPushMessage:false, AutoFlushSendMessage:1, IsOpenBatchReceiveHighMessage:false, AutoFlushReceiveHighMessage:1, IsOpenBatchReceiveMiddleMessage:true, AutoFlushReceiveMiddleMessage:2, IsOpenBatchReceiveNormalMessage:true, AutoFlushReceiveNormalMessage:3, IsOpenBatchReceiveLowMessage:true, AutoFlushReceiveLowMessage:5, PushAheadTime:1, ParallelSubscribeSettingList:[{MessagePriority:'High'},{MessagePriority:'Middle'},{MessagePriority:'Normal'},{MessagePriority:'Low'}]}"/>
  <add key="RedoServiceSetting" value="{IsOpenBatchSendPushMessage:false, AutoFlushSendMessage: 1, PushAheadTime: 1, ScanSettingList:[{MessagePriority:'High', MessageType:['OrderTicketOut'], LimitCount:100, PushStatus:4, InternalTime:2, IdleSleepTime:100, PrevScanTimes:176800, NextScanTimes:2},{MessagePriority:'Middle', MessageType:['OrderPayResult', 'NotifyZBNTicketOut'], LimitCount:60, PushStatus:4, InternalTime:2, PrevScanTimes:176800, IdleSleepTime:200, NextScanTimes:2},{MessagePriority:'Normal', MessageType:['OrderReturnResult'], LimitCount:40, PushStatus:4, InternalTime:2, PrevScanTimes:176800, IdleSleepTime:400, NextScanTimes:2},{MessagePriority:'Low', MessageType:['OrderCancel'], LimitCount:20, PushStatus:4, InternalTime:2, PrevScanTimes:176800, IdleSleepTime:1000, NextScanTimes:2}]}"/>
  <add key="SendServiceSetting" value="{IsOpenBatchSendHighMessage:false, AutoFlushSendHighMessage:1, IsOpenBatchSendMiddleMessage:true, AutoFlushSendMiddleMessage:3, IsOpenBatchSendNormalMessage:true, AutoFlushSendNormalMessage:4, IsOpenBatchSendLowMessage:true, AutoFlushSendLowMessage:5, SendToClientTimeout:15000}"/>
  <add key="ScanServiceSetting" value="{ScanSettingList:[{MessType:'OrderTicketOut',OrderStatus:2,IntervalTime:300,OrderBy:'OutTime',ScanOrderIdInit:86000000,ScanCount:50,Include:'0,849029,511506,575838,209244,310876,200749,841882,285549,534070,449082,308665,48060',IdleSleepTime:1000,NextSpan:10},{MessType:'NotifyZBNTicketOut',OrderStatus:7,IntervalTime:300,OrderBy:'Contingent7',ScanOrderIdInit:86000000,ScanCount:50,Include:'0,849029,511506,575838,209244,310876,200749,841882,285549,534070,449082,308665,48060',IdleSleepTime:1500,NextSpan:10},{MessType:'OrderReturnResult',OrderStatus:5,IntervalTime:300,OrderBy:'OverTime',ScanOrderIdInit:86000000,ScanCount:50,Include:'0,511506,575838,209244,310876,200749,841882,285549,534070,449082,308665',IdleSleepTime:2000,NextSpan:10},{MessType:'OrderPayResult',OrderStatus:1,IntervalTime:300,OrderBy:'PayTime',ScanOrderIdInit:86000000,ScanCount:50,Include:'0,849029,511506,575838,209244,310876,200749,841882,285549,534070,449082,308665,48060',IdleSleepTime:1000,NextSpan:10}]}" />
</appSettings>